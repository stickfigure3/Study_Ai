version: 1
applications:
  - backend:
      phases:
        build:
          commands:
            # Define variables for clarity (replace 'study-app-image' if you used a different name)
            - REPOSITORY_NAME=study_ai
            - IMAGE_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$REPOSITORY_NAME
            # Define tags - using branch+commit for specific version, and 'latest'
            - IMAGE_TAG_VERSION=$AWS_BRANCH-$AWS_COMMIT_ID
            - IMAGE_TAG_LATEST=latest

            - echo "Logging in to Amazon ECR..."
            - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

            - echo "Building the Docker image..."
            # Build the image locally first
            - docker build -t $REPOSITORY_NAME .

            - echo "Tagging the Docker image for ECR..."
            # Tag with the specific version tag
            - docker tag $REPOSITORY_NAME:latest $IMAGE_URI:$IMAGE_TAG_VERSION
            # Tag with 'latest'
            - docker tag $REPOSITORY_NAME:latest $IMAGE_URI:$IMAGE_TAG_LATEST

            - echo "Pushing the Docker image to ECR..."
            # Push the version tag
            - docker push $IMAGE_URI:$IMAGE_TAG_VERSION
            # Push the 'latest' tag
            - docker push $IMAGE_URI:$IMAGE_TAG_LATEST
    # ---> ADD THIS MINIMAL FRONTEND SECTION <---
    frontend:
      phases:
        # No build steps needed for frontend if it's just backend
        build:
          commands: []
      artifacts:
        # No frontend artifacts to deploy
        baseDirectory: / # Or any placeholder directory that exists but is empty
        files: []
      cache:
        paths: []
    # ---> END OF ADDED FRONTEND SECTION <---